buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.11'
	}
}
plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'com.google.protobuf' version '0.8.11'
	id 'java'
}

group = 'com.iamslash'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'io.github.lognet:grpc-spring-boot-starter:4.2.1'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation 'org.springframework.data:spring-data-elasticsearch:4.0.0.RELEASE'
}

test {
	useJUnitPlatform()
}

configurations.all {
	resolutionStrategy.eachDependency { details ->
		if ("io.grpc".equalsIgnoreCase(details.requested.group)) {
			details.useVersion grpcVersion
		}
	}
}
sourceSets {
	main {
		java {
			srcDir "$projectDir/src/generated"
		}
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.5.1'
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}

	generateProtoTasks {
		ofSourceSet('main').each { task ->
			task.builtins {
				java {
					outputSubDir = 'protoGen'
				}
			}
			task.plugins {
				grpc {
					outputSubDir = 'protoGen'
				}
			}
		}
	}
	generatedFilesBaseDir = "$projectDir/src/generated"
}

task cleanProtoGen {
	doFirst {
		delete("$projectDir/src/generated")
	}
}
clean.dependsOn cleanProtoGen
